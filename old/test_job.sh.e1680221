OpenCV version 2.4.8 loaded.
Boost version 1.54.0 loaded.
Python programming language version 2.7.8 loaded.
caffe version 20170112 loaded.
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0419 18:52:06.624018 28890 _caffe.cpp:122] DEPRECATION WARNING - deprecated use of Python interface
W0419 18:52:06.624065 28890 _caffe.cpp:123] Use this instead (with the named "weights" parameter):
W0419 18:52:06.624076 28890 _caffe.cpp:125] Net('models/finalproject/deploy.prototxt', 1, weights='models/finalproject/finalproject_iter_90000.caffemodel')
I0419 18:52:06.646850 28890 net.cpp:58] Initializing net from parameters: 
name: "finalprojectCaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_finalproject"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_finalproject"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
I0419 18:52:06.647028 28890 layer_factory.hpp:77] Creating layer data
I0419 18:52:06.647083 28890 net.cpp:100] Creating Layer data
I0419 18:52:06.647106 28890 net.cpp:408] data -> data
I0419 18:52:06.667111 28890 net.cpp:150] Setting up data
I0419 18:52:06.667239 28890 net.cpp:157] Top shape: 10 3 227 227 (1545870)
I0419 18:52:06.667255 28890 net.cpp:165] Memory required for data: 6183480
I0419 18:52:06.667271 28890 layer_factory.hpp:77] Creating layer conv1
I0419 18:52:06.667305 28890 net.cpp:100] Creating Layer conv1
I0419 18:52:06.667322 28890 net.cpp:434] conv1 <- data
I0419 18:52:06.667351 28890 net.cpp:408] conv1 -> conv1
I0419 18:52:08.898581 28890 net.cpp:150] Setting up conv1
I0419 18:52:08.898630 28890 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0419 18:52:08.898653 28890 net.cpp:165] Memory required for data: 17799480
I0419 18:52:08.898689 28890 layer_factory.hpp:77] Creating layer relu1
I0419 18:52:08.898722 28890 net.cpp:100] Creating Layer relu1
I0419 18:52:08.898756 28890 net.cpp:434] relu1 <- conv1
I0419 18:52:08.898773 28890 net.cpp:395] relu1 -> conv1 (in-place)
I0419 18:52:08.899109 28890 net.cpp:150] Setting up relu1
I0419 18:52:08.899128 28890 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0419 18:52:08.899139 28890 net.cpp:165] Memory required for data: 29415480
I0419 18:52:08.899150 28890 layer_factory.hpp:77] Creating layer pool1
I0419 18:52:08.899175 28890 net.cpp:100] Creating Layer pool1
I0419 18:52:08.899188 28890 net.cpp:434] pool1 <- conv1
I0419 18:52:08.899202 28890 net.cpp:408] pool1 -> pool1
I0419 18:52:08.899291 28890 net.cpp:150] Setting up pool1
I0419 18:52:08.899307 28890 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0419 18:52:08.899323 28890 net.cpp:165] Memory required for data: 32214840
I0419 18:52:08.899334 28890 layer_factory.hpp:77] Creating layer norm1
I0419 18:52:08.899365 28890 net.cpp:100] Creating Layer norm1
I0419 18:52:08.899390 28890 net.cpp:434] norm1 <- pool1
I0419 18:52:08.899408 28890 net.cpp:408] norm1 -> norm1
I0419 18:52:08.899946 28890 net.cpp:150] Setting up norm1
I0419 18:52:08.899967 28890 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0419 18:52:08.899981 28890 net.cpp:165] Memory required for data: 35014200
I0419 18:52:08.899996 28890 layer_factory.hpp:77] Creating layer conv2
I0419 18:52:08.900027 28890 net.cpp:100] Creating Layer conv2
I0419 18:52:08.900040 28890 net.cpp:434] conv2 <- norm1
I0419 18:52:08.900064 28890 net.cpp:408] conv2 -> conv2
I0419 18:52:08.910825 28890 net.cpp:150] Setting up conv2
I0419 18:52:08.910861 28890 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0419 18:52:08.910873 28890 net.cpp:165] Memory required for data: 42479160
I0419 18:52:08.910905 28890 layer_factory.hpp:77] Creating layer relu2
I0419 18:52:08.910934 28890 net.cpp:100] Creating Layer relu2
I0419 18:52:08.910946 28890 net.cpp:434] relu2 <- conv2
I0419 18:52:08.910962 28890 net.cpp:395] relu2 -> conv2 (in-place)
I0419 18:52:08.911331 28890 net.cpp:150] Setting up relu2
I0419 18:52:08.911350 28890 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0419 18:52:08.911362 28890 net.cpp:165] Memory required for data: 49944120
I0419 18:52:08.911382 28890 layer_factory.hpp:77] Creating layer pool2
I0419 18:52:08.911407 28890 net.cpp:100] Creating Layer pool2
I0419 18:52:08.911420 28890 net.cpp:434] pool2 <- conv2
I0419 18:52:08.911435 28890 net.cpp:408] pool2 -> pool2
I0419 18:52:08.911525 28890 net.cpp:150] Setting up pool2
I0419 18:52:08.911540 28890 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0419 18:52:08.911559 28890 net.cpp:165] Memory required for data: 51674680
I0419 18:52:08.911571 28890 layer_factory.hpp:77] Creating layer norm2
I0419 18:52:08.911592 28890 net.cpp:100] Creating Layer norm2
I0419 18:52:08.911610 28890 net.cpp:434] norm2 <- pool2
I0419 18:52:08.911625 28890 net.cpp:408] norm2 -> norm2
I0419 18:52:08.912206 28890 net.cpp:150] Setting up norm2
I0419 18:52:08.912231 28890 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0419 18:52:08.912250 28890 net.cpp:165] Memory required for data: 53405240
I0419 18:52:08.912261 28890 layer_factory.hpp:77] Creating layer conv3
I0419 18:52:08.912286 28890 net.cpp:100] Creating Layer conv3
I0419 18:52:08.912305 28890 net.cpp:434] conv3 <- norm2
I0419 18:52:08.912325 28890 net.cpp:408] conv3 -> conv3
I0419 18:52:08.933902 28890 net.cpp:150] Setting up conv3
I0419 18:52:08.933936 28890 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0419 18:52:08.933957 28890 net.cpp:165] Memory required for data: 56001080
I0419 18:52:08.933981 28890 layer_factory.hpp:77] Creating layer relu3
I0419 18:52:08.934002 28890 net.cpp:100] Creating Layer relu3
I0419 18:52:08.934015 28890 net.cpp:434] relu3 <- conv3
I0419 18:52:08.934047 28890 net.cpp:395] relu3 -> conv3 (in-place)
I0419 18:52:08.934551 28890 net.cpp:150] Setting up relu3
I0419 18:52:08.934573 28890 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0419 18:52:08.934586 28890 net.cpp:165] Memory required for data: 58596920
I0419 18:52:08.934597 28890 layer_factory.hpp:77] Creating layer conv4
I0419 18:52:08.934631 28890 net.cpp:100] Creating Layer conv4
I0419 18:52:08.934644 28890 net.cpp:434] conv4 <- conv3
I0419 18:52:08.934664 28890 net.cpp:408] conv4 -> conv4
I0419 18:52:08.952829 28890 net.cpp:150] Setting up conv4
I0419 18:52:08.952868 28890 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0419 18:52:08.952882 28890 net.cpp:165] Memory required for data: 61192760
I0419 18:52:08.952905 28890 layer_factory.hpp:77] Creating layer relu4
I0419 18:52:08.952922 28890 net.cpp:100] Creating Layer relu4
I0419 18:52:08.952934 28890 net.cpp:434] relu4 <- conv4
I0419 18:52:08.952962 28890 net.cpp:395] relu4 -> conv4 (in-place)
I0419 18:52:08.953310 28890 net.cpp:150] Setting up relu4
I0419 18:52:08.953330 28890 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0419 18:52:08.953341 28890 net.cpp:165] Memory required for data: 63788600
I0419 18:52:08.953352 28890 layer_factory.hpp:77] Creating layer conv5
I0419 18:52:08.953378 28890 net.cpp:100] Creating Layer conv5
I0419 18:52:08.953398 28890 net.cpp:434] conv5 <- conv4
I0419 18:52:08.953418 28890 net.cpp:408] conv5 -> conv5
I0419 18:52:08.966614 28890 net.cpp:150] Setting up conv5
I0419 18:52:08.966642 28890 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0419 18:52:08.966661 28890 net.cpp:165] Memory required for data: 65519160
I0419 18:52:08.966687 28890 layer_factory.hpp:77] Creating layer relu5
I0419 18:52:08.966712 28890 net.cpp:100] Creating Layer relu5
I0419 18:52:08.966737 28890 net.cpp:434] relu5 <- conv5
I0419 18:52:08.966753 28890 net.cpp:395] relu5 -> conv5 (in-place)
I0419 18:52:08.967098 28890 net.cpp:150] Setting up relu5
I0419 18:52:08.967120 28890 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0419 18:52:08.967133 28890 net.cpp:165] Memory required for data: 67249720
I0419 18:52:08.967146 28890 layer_factory.hpp:77] Creating layer pool5
I0419 18:52:08.967169 28890 net.cpp:100] Creating Layer pool5
I0419 18:52:08.967181 28890 net.cpp:434] pool5 <- conv5
I0419 18:52:08.967198 28890 net.cpp:408] pool5 -> pool5
I0419 18:52:08.967274 28890 net.cpp:150] Setting up pool5
I0419 18:52:08.967304 28890 net.cpp:157] Top shape: 10 256 6 6 (92160)
I0419 18:52:08.967316 28890 net.cpp:165] Memory required for data: 67618360
I0419 18:52:08.967330 28890 layer_factory.hpp:77] Creating layer fc6
I0419 18:52:08.967351 28890 net.cpp:100] Creating Layer fc6
I0419 18:52:08.967365 28890 net.cpp:434] fc6 <- pool5
I0419 18:52:08.967407 28890 net.cpp:408] fc6 -> fc6
I0419 18:52:09.790316 28890 net.cpp:150] Setting up fc6
I0419 18:52:09.790364 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:09.790385 28890 net.cpp:165] Memory required for data: 67782200
I0419 18:52:09.790410 28890 layer_factory.hpp:77] Creating layer relu6
I0419 18:52:09.790429 28890 net.cpp:100] Creating Layer relu6
I0419 18:52:09.790448 28890 net.cpp:434] relu6 <- fc6
I0419 18:52:09.790465 28890 net.cpp:395] relu6 -> fc6 (in-place)
I0419 18:52:09.791174 28890 net.cpp:150] Setting up relu6
I0419 18:52:09.791198 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:09.791216 28890 net.cpp:165] Memory required for data: 67946040
I0419 18:52:09.791229 28890 layer_factory.hpp:77] Creating layer drop6
I0419 18:52:09.791252 28890 net.cpp:100] Creating Layer drop6
I0419 18:52:09.791272 28890 net.cpp:434] drop6 <- fc6
I0419 18:52:09.791288 28890 net.cpp:395] drop6 -> fc6 (in-place)
I0419 18:52:09.791337 28890 net.cpp:150] Setting up drop6
I0419 18:52:09.791362 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:09.791380 28890 net.cpp:165] Memory required for data: 68109880
I0419 18:52:09.791393 28890 layer_factory.hpp:77] Creating layer fc7
I0419 18:52:09.791419 28890 net.cpp:100] Creating Layer fc7
I0419 18:52:09.791431 28890 net.cpp:434] fc7 <- fc6
I0419 18:52:09.791455 28890 net.cpp:408] fc7 -> fc7
I0419 18:52:10.158049 28890 net.cpp:150] Setting up fc7
I0419 18:52:10.158098 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:10.158112 28890 net.cpp:165] Memory required for data: 68273720
I0419 18:52:10.158135 28890 layer_factory.hpp:77] Creating layer relu7
I0419 18:52:10.158155 28890 net.cpp:100] Creating Layer relu7
I0419 18:52:10.158175 28890 net.cpp:434] relu7 <- fc7
I0419 18:52:10.158215 28890 net.cpp:395] relu7 -> fc7 (in-place)
I0419 18:52:10.158619 28890 net.cpp:150] Setting up relu7
I0419 18:52:10.158641 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:10.158653 28890 net.cpp:165] Memory required for data: 68437560
I0419 18:52:10.158664 28890 layer_factory.hpp:77] Creating layer drop7
I0419 18:52:10.158690 28890 net.cpp:100] Creating Layer drop7
I0419 18:52:10.158702 28890 net.cpp:434] drop7 <- fc7
I0419 18:52:10.158716 28890 net.cpp:395] drop7 -> fc7 (in-place)
I0419 18:52:10.158772 28890 net.cpp:150] Setting up drop7
I0419 18:52:10.158794 28890 net.cpp:157] Top shape: 10 4096 (40960)
I0419 18:52:10.158805 28890 net.cpp:165] Memory required for data: 68601400
I0419 18:52:10.158818 28890 layer_factory.hpp:77] Creating layer fc8_finalproject
I0419 18:52:10.158844 28890 net.cpp:100] Creating Layer fc8_finalproject
I0419 18:52:10.158856 28890 net.cpp:434] fc8_finalproject <- fc7
I0419 18:52:10.158879 28890 net.cpp:408] fc8_finalproject -> fc8_finalproject
I0419 18:52:10.159979 28890 net.cpp:150] Setting up fc8_finalproject
I0419 18:52:10.159996 28890 net.cpp:157] Top shape: 10 11 (110)
I0419 18:52:10.160009 28890 net.cpp:165] Memory required for data: 68601840
I0419 18:52:10.160027 28890 net.cpp:228] fc8_finalproject does not need backward computation.
I0419 18:52:10.160042 28890 net.cpp:228] drop7 does not need backward computation.
I0419 18:52:10.160059 28890 net.cpp:228] relu7 does not need backward computation.
I0419 18:52:10.160073 28890 net.cpp:228] fc7 does not need backward computation.
I0419 18:52:10.160084 28890 net.cpp:228] drop6 does not need backward computation.
I0419 18:52:10.160096 28890 net.cpp:228] relu6 does not need backward computation.
I0419 18:52:10.160109 28890 net.cpp:228] fc6 does not need backward computation.
I0419 18:52:10.160120 28890 net.cpp:228] pool5 does not need backward computation.
I0419 18:52:10.160133 28890 net.cpp:228] relu5 does not need backward computation.
I0419 18:52:10.160153 28890 net.cpp:228] conv5 does not need backward computation.
I0419 18:52:10.160168 28890 net.cpp:228] relu4 does not need backward computation.
I0419 18:52:10.160181 28890 net.cpp:228] conv4 does not need backward computation.
I0419 18:52:10.160192 28890 net.cpp:228] relu3 does not need backward computation.
I0419 18:52:10.160205 28890 net.cpp:228] conv3 does not need backward computation.
I0419 18:52:10.160218 28890 net.cpp:228] norm2 does not need backward computation.
I0419 18:52:10.160230 28890 net.cpp:228] pool2 does not need backward computation.
I0419 18:52:10.160253 28890 net.cpp:228] relu2 does not need backward computation.
I0419 18:52:10.160266 28890 net.cpp:228] conv2 does not need backward computation.
I0419 18:52:10.160279 28890 net.cpp:228] norm1 does not need backward computation.
I0419 18:52:10.160291 28890 net.cpp:228] pool1 does not need backward computation.
I0419 18:52:10.160305 28890 net.cpp:228] relu1 does not need backward computation.
I0419 18:52:10.160315 28890 net.cpp:228] conv1 does not need backward computation.
I0419 18:52:10.160328 28890 net.cpp:228] data does not need backward computation.
I0419 18:52:10.160348 28890 net.cpp:270] This network produces output fc8_finalproject
I0419 18:52:10.160382 28890 net.cpp:283] Network initialization done.
I0419 18:52:13.352972 28890 net.cpp:761] Ignoring source layer loss
Traceback (most recent call last):
  File "python/classify.py", line 167, in <module>
    main(sys.argv)
  File "python/classify.py", line 138, in main
    predictions = classifier.predict( inputs, not args.center_only)
  File "/N/dc2/scratch/snehvish/caffe/python/caffe/classifier.py", line 83, in predict
    dtype=np.float32)
MemoryError
