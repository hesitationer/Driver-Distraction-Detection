OpenCV version 2.4.8 loaded.
Boost version 1.54.0 loaded.
Python programming language version 2.7.8 loaded.
caffe version 20170112 loaded.
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0417 00:42:09.436219  7741 _caffe.cpp:122] DEPRECATION WARNING - deprecated use of Python interface
W0417 00:42:09.436267  7741 _caffe.cpp:123] Use this instead (with the named "weights" parameter):
W0417 00:42:09.436280  7741 _caffe.cpp:125] Net('models/finalproject/deploy.prototxt', 1, weights='models/finalproject/finalproject_iter_90000.caffemodel')
I0417 00:42:09.485620  7741 net.cpp:58] Initializing net from parameters: 
name: "finalprojectCaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_finalproject"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_finalproject"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 11
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
I0417 00:42:09.485815  7741 layer_factory.hpp:77] Creating layer data
I0417 00:42:09.485882  7741 net.cpp:100] Creating Layer data
I0417 00:42:09.485914  7741 net.cpp:408] data -> data
I0417 00:42:09.505856  7741 net.cpp:150] Setting up data
I0417 00:42:09.505993  7741 net.cpp:157] Top shape: 10 3 227 227 (1545870)
I0417 00:42:09.506008  7741 net.cpp:165] Memory required for data: 6183480
I0417 00:42:09.506026  7741 layer_factory.hpp:77] Creating layer conv1
I0417 00:42:09.506060  7741 net.cpp:100] Creating Layer conv1
I0417 00:42:09.506078  7741 net.cpp:434] conv1 <- data
I0417 00:42:09.506108  7741 net.cpp:408] conv1 -> conv1
I0417 00:42:10.220269  7741 net.cpp:150] Setting up conv1
I0417 00:42:10.220314  7741 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0417 00:42:10.220340  7741 net.cpp:165] Memory required for data: 17799480
I0417 00:42:10.220374  7741 layer_factory.hpp:77] Creating layer relu1
I0417 00:42:10.220408  7741 net.cpp:100] Creating Layer relu1
I0417 00:42:10.220441  7741 net.cpp:434] relu1 <- conv1
I0417 00:42:10.220458  7741 net.cpp:395] relu1 -> conv1 (in-place)
I0417 00:42:10.220810  7741 net.cpp:150] Setting up relu1
I0417 00:42:10.220830  7741 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0417 00:42:10.220842  7741 net.cpp:165] Memory required for data: 29415480
I0417 00:42:10.220854  7741 layer_factory.hpp:77] Creating layer pool1
I0417 00:42:10.220880  7741 net.cpp:100] Creating Layer pool1
I0417 00:42:10.220892  7741 net.cpp:434] pool1 <- conv1
I0417 00:42:10.220907  7741 net.cpp:408] pool1 -> pool1
I0417 00:42:10.220996  7741 net.cpp:150] Setting up pool1
I0417 00:42:10.221014  7741 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0417 00:42:10.221031  7741 net.cpp:165] Memory required for data: 32214840
I0417 00:42:10.221043  7741 layer_factory.hpp:77] Creating layer norm1
I0417 00:42:10.221068  7741 net.cpp:100] Creating Layer norm1
I0417 00:42:10.221086  7741 net.cpp:434] norm1 <- pool1
I0417 00:42:10.221101  7741 net.cpp:408] norm1 -> norm1
I0417 00:42:10.221634  7741 net.cpp:150] Setting up norm1
I0417 00:42:10.221655  7741 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0417 00:42:10.221669  7741 net.cpp:165] Memory required for data: 35014200
I0417 00:42:10.221681  7741 layer_factory.hpp:77] Creating layer conv2
I0417 00:42:10.221716  7741 net.cpp:100] Creating Layer conv2
I0417 00:42:10.221730  7741 net.cpp:434] conv2 <- norm1
I0417 00:42:10.221746  7741 net.cpp:408] conv2 -> conv2
I0417 00:42:10.232538  7741 net.cpp:150] Setting up conv2
I0417 00:42:10.232570  7741 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0417 00:42:10.232590  7741 net.cpp:165] Memory required for data: 42479160
I0417 00:42:10.232619  7741 layer_factory.hpp:77] Creating layer relu2
I0417 00:42:10.232640  7741 net.cpp:100] Creating Layer relu2
I0417 00:42:10.232664  7741 net.cpp:434] relu2 <- conv2
I0417 00:42:10.232681  7741 net.cpp:395] relu2 -> conv2 (in-place)
I0417 00:42:10.233041  7741 net.cpp:150] Setting up relu2
I0417 00:42:10.233059  7741 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0417 00:42:10.233070  7741 net.cpp:165] Memory required for data: 49944120
I0417 00:42:10.233081  7741 layer_factory.hpp:77] Creating layer pool2
I0417 00:42:10.233110  7741 net.cpp:100] Creating Layer pool2
I0417 00:42:10.233122  7741 net.cpp:434] pool2 <- conv2
I0417 00:42:10.233137  7741 net.cpp:408] pool2 -> pool2
I0417 00:42:10.233232  7741 net.cpp:150] Setting up pool2
I0417 00:42:10.233248  7741 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0417 00:42:10.233259  7741 net.cpp:165] Memory required for data: 51674680
I0417 00:42:10.233273  7741 layer_factory.hpp:77] Creating layer norm2
I0417 00:42:10.233301  7741 net.cpp:100] Creating Layer norm2
I0417 00:42:10.233314  7741 net.cpp:434] norm2 <- pool2
I0417 00:42:10.233330  7741 net.cpp:408] norm2 -> norm2
I0417 00:42:10.233909  7741 net.cpp:150] Setting up norm2
I0417 00:42:10.233934  7741 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0417 00:42:10.233947  7741 net.cpp:165] Memory required for data: 53405240
I0417 00:42:10.233958  7741 layer_factory.hpp:77] Creating layer conv3
I0417 00:42:10.233989  7741 net.cpp:100] Creating Layer conv3
I0417 00:42:10.234001  7741 net.cpp:434] conv3 <- norm2
I0417 00:42:10.234021  7741 net.cpp:408] conv3 -> conv3
I0417 00:42:10.255731  7741 net.cpp:150] Setting up conv3
I0417 00:42:10.255765  7741 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0417 00:42:10.255786  7741 net.cpp:165] Memory required for data: 56001080
I0417 00:42:10.255811  7741 layer_factory.hpp:77] Creating layer relu3
I0417 00:42:10.255834  7741 net.cpp:100] Creating Layer relu3
I0417 00:42:10.255847  7741 net.cpp:434] relu3 <- conv3
I0417 00:42:10.255882  7741 net.cpp:395] relu3 -> conv3 (in-place)
I0417 00:42:10.256388  7741 net.cpp:150] Setting up relu3
I0417 00:42:10.256410  7741 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0417 00:42:10.256422  7741 net.cpp:165] Memory required for data: 58596920
I0417 00:42:10.256433  7741 layer_factory.hpp:77] Creating layer conv4
I0417 00:42:10.256469  7741 net.cpp:100] Creating Layer conv4
I0417 00:42:10.256481  7741 net.cpp:434] conv4 <- conv3
I0417 00:42:10.256502  7741 net.cpp:408] conv4 -> conv4
I0417 00:42:10.274797  7741 net.cpp:150] Setting up conv4
I0417 00:42:10.274832  7741 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0417 00:42:10.274844  7741 net.cpp:165] Memory required for data: 61192760
I0417 00:42:10.274863  7741 layer_factory.hpp:77] Creating layer relu4
I0417 00:42:10.274884  7741 net.cpp:100] Creating Layer relu4
I0417 00:42:10.274896  7741 net.cpp:434] relu4 <- conv4
I0417 00:42:10.274925  7741 net.cpp:395] relu4 -> conv4 (in-place)
I0417 00:42:10.275267  7741 net.cpp:150] Setting up relu4
I0417 00:42:10.275285  7741 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0417 00:42:10.275297  7741 net.cpp:165] Memory required for data: 63788600
I0417 00:42:10.275308  7741 layer_factory.hpp:77] Creating layer conv5
I0417 00:42:10.275341  7741 net.cpp:100] Creating Layer conv5
I0417 00:42:10.275354  7741 net.cpp:434] conv5 <- conv4
I0417 00:42:10.275374  7741 net.cpp:408] conv5 -> conv5
I0417 00:42:10.288640  7741 net.cpp:150] Setting up conv5
I0417 00:42:10.288671  7741 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0417 00:42:10.288691  7741 net.cpp:165] Memory required for data: 65519160
I0417 00:42:10.288717  7741 layer_factory.hpp:77] Creating layer relu5
I0417 00:42:10.288740  7741 net.cpp:100] Creating Layer relu5
I0417 00:42:10.288753  7741 net.cpp:434] relu5 <- conv5
I0417 00:42:10.288781  7741 net.cpp:395] relu5 -> conv5 (in-place)
I0417 00:42:10.289120  7741 net.cpp:150] Setting up relu5
I0417 00:42:10.289142  7741 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0417 00:42:10.289155  7741 net.cpp:165] Memory required for data: 67249720
I0417 00:42:10.289168  7741 layer_factory.hpp:77] Creating layer pool5
I0417 00:42:10.289191  7741 net.cpp:100] Creating Layer pool5
I0417 00:42:10.289203  7741 net.cpp:434] pool5 <- conv5
I0417 00:42:10.289222  7741 net.cpp:408] pool5 -> pool5
I0417 00:42:10.289299  7741 net.cpp:150] Setting up pool5
I0417 00:42:10.289322  7741 net.cpp:157] Top shape: 10 256 6 6 (92160)
I0417 00:42:10.289340  7741 net.cpp:165] Memory required for data: 67618360
I0417 00:42:10.289355  7741 layer_factory.hpp:77] Creating layer fc6
I0417 00:42:10.289376  7741 net.cpp:100] Creating Layer fc6
I0417 00:42:10.289389  7741 net.cpp:434] fc6 <- pool5
I0417 00:42:10.289415  7741 net.cpp:408] fc6 -> fc6
I0417 00:42:11.112278  7741 net.cpp:150] Setting up fc6
I0417 00:42:11.112332  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.112357  7741 net.cpp:165] Memory required for data: 67782200
I0417 00:42:11.112382  7741 layer_factory.hpp:77] Creating layer relu6
I0417 00:42:11.112402  7741 net.cpp:100] Creating Layer relu6
I0417 00:42:11.112422  7741 net.cpp:434] relu6 <- fc6
I0417 00:42:11.112438  7741 net.cpp:395] relu6 -> fc6 (in-place)
I0417 00:42:11.113174  7741 net.cpp:150] Setting up relu6
I0417 00:42:11.113200  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.113212  7741 net.cpp:165] Memory required for data: 67946040
I0417 00:42:11.113227  7741 layer_factory.hpp:77] Creating layer drop6
I0417 00:42:11.113257  7741 net.cpp:100] Creating Layer drop6
I0417 00:42:11.113270  7741 net.cpp:434] drop6 <- fc6
I0417 00:42:11.113284  7741 net.cpp:395] drop6 -> fc6 (in-place)
I0417 00:42:11.113343  7741 net.cpp:150] Setting up drop6
I0417 00:42:11.113358  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.113369  7741 net.cpp:165] Memory required for data: 68109880
I0417 00:42:11.113380  7741 layer_factory.hpp:77] Creating layer fc7
I0417 00:42:11.113404  7741 net.cpp:100] Creating Layer fc7
I0417 00:42:11.113425  7741 net.cpp:434] fc7 <- fc6
I0417 00:42:11.113440  7741 net.cpp:408] fc7 -> fc7
I0417 00:42:11.481266  7741 net.cpp:150] Setting up fc7
I0417 00:42:11.481313  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.481326  7741 net.cpp:165] Memory required for data: 68273720
I0417 00:42:11.481353  7741 layer_factory.hpp:77] Creating layer relu7
I0417 00:42:11.481372  7741 net.cpp:100] Creating Layer relu7
I0417 00:42:11.481386  7741 net.cpp:434] relu7 <- fc7
I0417 00:42:11.481432  7741 net.cpp:395] relu7 -> fc7 (in-place)
I0417 00:42:11.481837  7741 net.cpp:150] Setting up relu7
I0417 00:42:11.481858  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.481870  7741 net.cpp:165] Memory required for data: 68437560
I0417 00:42:11.481881  7741 layer_factory.hpp:77] Creating layer drop7
I0417 00:42:11.481907  7741 net.cpp:100] Creating Layer drop7
I0417 00:42:11.481920  7741 net.cpp:434] drop7 <- fc7
I0417 00:42:11.481935  7741 net.cpp:395] drop7 -> fc7 (in-place)
I0417 00:42:11.481990  7741 net.cpp:150] Setting up drop7
I0417 00:42:11.482012  7741 net.cpp:157] Top shape: 10 4096 (40960)
I0417 00:42:11.482023  7741 net.cpp:165] Memory required for data: 68601400
I0417 00:42:11.482035  7741 layer_factory.hpp:77] Creating layer fc8_finalproject
I0417 00:42:11.482056  7741 net.cpp:100] Creating Layer fc8_finalproject
I0417 00:42:11.482069  7741 net.cpp:434] fc8_finalproject <- fc7
I0417 00:42:11.482095  7741 net.cpp:408] fc8_finalproject -> fc8_finalproject
I0417 00:42:11.483197  7741 net.cpp:150] Setting up fc8_finalproject
I0417 00:42:11.483214  7741 net.cpp:157] Top shape: 10 11 (110)
I0417 00:42:11.483232  7741 net.cpp:165] Memory required for data: 68601840
I0417 00:42:11.483253  7741 net.cpp:228] fc8_finalproject does not need backward computation.
I0417 00:42:11.483264  7741 net.cpp:228] drop7 does not need backward computation.
I0417 00:42:11.483279  7741 net.cpp:228] relu7 does not need backward computation.
I0417 00:42:11.483297  7741 net.cpp:228] fc7 does not need backward computation.
I0417 00:42:11.483310  7741 net.cpp:228] drop6 does not need backward computation.
I0417 00:42:11.483324  7741 net.cpp:228] relu6 does not need backward computation.
I0417 00:42:11.483335  7741 net.cpp:228] fc6 does not need backward computation.
I0417 00:42:11.483347  7741 net.cpp:228] pool5 does not need backward computation.
I0417 00:42:11.483361  7741 net.cpp:228] relu5 does not need backward computation.
I0417 00:42:11.483371  7741 net.cpp:228] conv5 does not need backward computation.
I0417 00:42:11.483393  7741 net.cpp:228] relu4 does not need backward computation.
I0417 00:42:11.483407  7741 net.cpp:228] conv4 does not need backward computation.
I0417 00:42:11.483419  7741 net.cpp:228] relu3 does not need backward computation.
I0417 00:42:11.483431  7741 net.cpp:228] conv3 does not need backward computation.
I0417 00:42:11.483444  7741 net.cpp:228] norm2 does not need backward computation.
I0417 00:42:11.483456  7741 net.cpp:228] pool2 does not need backward computation.
I0417 00:42:11.483469  7741 net.cpp:228] relu2 does not need backward computation.
I0417 00:42:11.483489  7741 net.cpp:228] conv2 does not need backward computation.
I0417 00:42:11.483502  7741 net.cpp:228] norm1 does not need backward computation.
I0417 00:42:11.483515  7741 net.cpp:228] pool1 does not need backward computation.
I0417 00:42:11.483527  7741 net.cpp:228] relu1 does not need backward computation.
I0417 00:42:11.483541  7741 net.cpp:228] conv1 does not need backward computation.
I0417 00:42:11.483552  7741 net.cpp:228] data does not need backward computation.
I0417 00:42:11.483563  7741 net.cpp:270] This network produces output fc8_finalproject
I0417 00:42:11.483605  7741 net.cpp:283] Network initialization done.
I0417 00:42:14.672268  7741 net.cpp:761] Ignoring source layer loss
Traceback (most recent call last):
  File "python/classify.py", line 167, in <module>
    main(sys.argv)
  File "python/classify.py", line 138, in main
    predictions = classifier.predict(inputs, not args.center_only)
  File "/N/dc2/scratch/snehvish/caffe/python/caffe/classifier.py", line 87, in predict
    dtype=np.float32)
MemoryError
