OpenCV version 2.4.8 loaded.
Boost version 1.54.0 loaded.
Python programming language version 2.7.8 loaded.
caffe version 20170112 loaded.
WARNING: Logging before InitGoogleLogging() is written to STDERR
W0423 20:03:13.091352  1490 _caffe.cpp:122] DEPRECATION WARNING - deprecated use of Python interface
W0423 20:03:13.091399  1490 _caffe.cpp:123] Use this instead (with the named "weights" parameter):
W0423 20:03:13.091411  1490 _caffe.cpp:125] Net('models/fp-mini/deploy.prototxt', 1, weights='models/fp-mini/fp-mini_iter_10000.caffemodel')
I0423 20:03:13.113399  1490 net.cpp:58] Initializing net from parameters: 
name: "fp-miniCaffeNet"
state {
  phase: TEST
  level: 0
}
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 10
      dim: 3
      dim: 227
      dim: 227
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_fp-mini"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_fp-mini"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
I0423 20:03:13.113577  1490 layer_factory.hpp:77] Creating layer data
I0423 20:03:13.113634  1490 net.cpp:100] Creating Layer data
I0423 20:03:13.113656  1490 net.cpp:408] data -> data
I0423 20:03:13.133644  1490 net.cpp:150] Setting up data
I0423 20:03:13.133771  1490 net.cpp:157] Top shape: 10 3 227 227 (1545870)
I0423 20:03:13.133785  1490 net.cpp:165] Memory required for data: 6183480
I0423 20:03:13.133813  1490 layer_factory.hpp:77] Creating layer conv1
I0423 20:03:13.133853  1490 net.cpp:100] Creating Layer conv1
I0423 20:03:13.133867  1490 net.cpp:434] conv1 <- data
I0423 20:03:13.133898  1490 net.cpp:408] conv1 -> conv1
I0423 20:03:13.701241  1490 net.cpp:150] Setting up conv1
I0423 20:03:13.701290  1490 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0423 20:03:13.701314  1490 net.cpp:165] Memory required for data: 17799480
I0423 20:03:13.701350  1490 layer_factory.hpp:77] Creating layer relu1
I0423 20:03:13.701377  1490 net.cpp:100] Creating Layer relu1
I0423 20:03:13.701397  1490 net.cpp:434] relu1 <- conv1
I0423 20:03:13.701432  1490 net.cpp:395] relu1 -> conv1 (in-place)
I0423 20:03:13.701771  1490 net.cpp:150] Setting up relu1
I0423 20:03:13.701791  1490 net.cpp:157] Top shape: 10 96 55 55 (2904000)
I0423 20:03:13.701802  1490 net.cpp:165] Memory required for data: 29415480
I0423 20:03:13.701814  1490 layer_factory.hpp:77] Creating layer pool1
I0423 20:03:13.701839  1490 net.cpp:100] Creating Layer pool1
I0423 20:03:13.701853  1490 net.cpp:434] pool1 <- conv1
I0423 20:03:13.701867  1490 net.cpp:408] pool1 -> pool1
I0423 20:03:13.701948  1490 net.cpp:150] Setting up pool1
I0423 20:03:13.701964  1490 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0423 20:03:13.701977  1490 net.cpp:165] Memory required for data: 32214840
I0423 20:03:13.701987  1490 layer_factory.hpp:77] Creating layer norm1
I0423 20:03:13.702013  1490 net.cpp:100] Creating Layer norm1
I0423 20:03:13.702023  1490 net.cpp:434] norm1 <- pool1
I0423 20:03:13.702046  1490 net.cpp:408] norm1 -> norm1
I0423 20:03:13.702582  1490 net.cpp:150] Setting up norm1
I0423 20:03:13.702605  1490 net.cpp:157] Top shape: 10 96 27 27 (699840)
I0423 20:03:13.702617  1490 net.cpp:165] Memory required for data: 35014200
I0423 20:03:13.702628  1490 layer_factory.hpp:77] Creating layer conv2
I0423 20:03:13.702664  1490 net.cpp:100] Creating Layer conv2
I0423 20:03:13.702678  1490 net.cpp:434] conv2 <- norm1
I0423 20:03:13.702703  1490 net.cpp:408] conv2 -> conv2
I0423 20:03:13.713551  1490 net.cpp:150] Setting up conv2
I0423 20:03:13.713583  1490 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0423 20:03:13.713598  1490 net.cpp:165] Memory required for data: 42479160
I0423 20:03:13.713623  1490 layer_factory.hpp:77] Creating layer relu2
I0423 20:03:13.713660  1490 net.cpp:100] Creating Layer relu2
I0423 20:03:13.713672  1490 net.cpp:434] relu2 <- conv2
I0423 20:03:13.713688  1490 net.cpp:395] relu2 -> conv2 (in-place)
I0423 20:03:13.714058  1490 net.cpp:150] Setting up relu2
I0423 20:03:13.714077  1490 net.cpp:157] Top shape: 10 256 27 27 (1866240)
I0423 20:03:13.714089  1490 net.cpp:165] Memory required for data: 49944120
I0423 20:03:13.714099  1490 layer_factory.hpp:77] Creating layer pool2
I0423 20:03:13.714124  1490 net.cpp:100] Creating Layer pool2
I0423 20:03:13.714138  1490 net.cpp:434] pool2 <- conv2
I0423 20:03:13.714155  1490 net.cpp:408] pool2 -> pool2
I0423 20:03:13.714258  1490 net.cpp:150] Setting up pool2
I0423 20:03:13.714274  1490 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0423 20:03:13.714292  1490 net.cpp:165] Memory required for data: 51674680
I0423 20:03:13.714303  1490 layer_factory.hpp:77] Creating layer norm2
I0423 20:03:13.714332  1490 net.cpp:100] Creating Layer norm2
I0423 20:03:13.714344  1490 net.cpp:434] norm2 <- pool2
I0423 20:03:13.714359  1490 net.cpp:408] norm2 -> norm2
I0423 20:03:13.714931  1490 net.cpp:150] Setting up norm2
I0423 20:03:13.714952  1490 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0423 20:03:13.714973  1490 net.cpp:165] Memory required for data: 53405240
I0423 20:03:13.714985  1490 layer_factory.hpp:77] Creating layer conv3
I0423 20:03:13.715005  1490 net.cpp:100] Creating Layer conv3
I0423 20:03:13.715029  1490 net.cpp:434] conv3 <- norm2
I0423 20:03:13.715050  1490 net.cpp:408] conv3 -> conv3
I0423 20:03:13.736698  1490 net.cpp:150] Setting up conv3
I0423 20:03:13.736738  1490 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0423 20:03:13.736752  1490 net.cpp:165] Memory required for data: 56001080
I0423 20:03:13.736775  1490 layer_factory.hpp:77] Creating layer relu3
I0423 20:03:13.736798  1490 net.cpp:100] Creating Layer relu3
I0423 20:03:13.736809  1490 net.cpp:434] relu3 <- conv3
I0423 20:03:13.736841  1490 net.cpp:395] relu3 -> conv3 (in-place)
I0423 20:03:13.737347  1490 net.cpp:150] Setting up relu3
I0423 20:03:13.737370  1490 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0423 20:03:13.737381  1490 net.cpp:165] Memory required for data: 58596920
I0423 20:03:13.737393  1490 layer_factory.hpp:77] Creating layer conv4
I0423 20:03:13.737429  1490 net.cpp:100] Creating Layer conv4
I0423 20:03:13.737442  1490 net.cpp:434] conv4 <- conv3
I0423 20:03:13.737462  1490 net.cpp:408] conv4 -> conv4
I0423 20:03:13.755725  1490 net.cpp:150] Setting up conv4
I0423 20:03:13.755761  1490 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0423 20:03:13.755774  1490 net.cpp:165] Memory required for data: 61192760
I0423 20:03:13.755795  1490 layer_factory.hpp:77] Creating layer relu4
I0423 20:03:13.755815  1490 net.cpp:100] Creating Layer relu4
I0423 20:03:13.755828  1490 net.cpp:434] relu4 <- conv4
I0423 20:03:13.755856  1490 net.cpp:395] relu4 -> conv4 (in-place)
I0423 20:03:13.756194  1490 net.cpp:150] Setting up relu4
I0423 20:03:13.756213  1490 net.cpp:157] Top shape: 10 384 13 13 (648960)
I0423 20:03:13.756225  1490 net.cpp:165] Memory required for data: 63788600
I0423 20:03:13.756237  1490 layer_factory.hpp:77] Creating layer conv5
I0423 20:03:13.756270  1490 net.cpp:100] Creating Layer conv5
I0423 20:03:13.756283  1490 net.cpp:434] conv5 <- conv4
I0423 20:03:13.756304  1490 net.cpp:408] conv5 -> conv5
I0423 20:03:13.769541  1490 net.cpp:150] Setting up conv5
I0423 20:03:13.769572  1490 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0423 20:03:13.769592  1490 net.cpp:165] Memory required for data: 65519160
I0423 20:03:13.769618  1490 layer_factory.hpp:77] Creating layer relu5
I0423 20:03:13.769644  1490 net.cpp:100] Creating Layer relu5
I0423 20:03:13.769656  1490 net.cpp:434] relu5 <- conv5
I0423 20:03:13.769685  1490 net.cpp:395] relu5 -> conv5 (in-place)
I0423 20:03:13.770020  1490 net.cpp:150] Setting up relu5
I0423 20:03:13.770042  1490 net.cpp:157] Top shape: 10 256 13 13 (432640)
I0423 20:03:13.770054  1490 net.cpp:165] Memory required for data: 67249720
I0423 20:03:13.770068  1490 layer_factory.hpp:77] Creating layer pool5
I0423 20:03:13.770090  1490 net.cpp:100] Creating Layer pool5
I0423 20:03:13.770103  1490 net.cpp:434] pool5 <- conv5
I0423 20:03:13.770122  1490 net.cpp:408] pool5 -> pool5
I0423 20:03:13.770205  1490 net.cpp:150] Setting up pool5
I0423 20:03:13.770220  1490 net.cpp:157] Top shape: 10 256 6 6 (92160)
I0423 20:03:13.770236  1490 net.cpp:165] Memory required for data: 67618360
I0423 20:03:13.770251  1490 layer_factory.hpp:77] Creating layer fc6
I0423 20:03:13.770275  1490 net.cpp:100] Creating Layer fc6
I0423 20:03:13.770287  1490 net.cpp:434] fc6 <- pool5
I0423 20:03:13.770313  1490 net.cpp:408] fc6 -> fc6
I0423 20:03:14.593051  1490 net.cpp:150] Setting up fc6
I0423 20:03:14.593097  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.593111  1490 net.cpp:165] Memory required for data: 67782200
I0423 20:03:14.593135  1490 layer_factory.hpp:77] Creating layer relu6
I0423 20:03:14.593158  1490 net.cpp:100] Creating Layer relu6
I0423 20:03:14.593173  1490 net.cpp:434] relu6 <- fc6
I0423 20:03:14.593194  1490 net.cpp:395] relu6 -> fc6 (in-place)
I0423 20:03:14.593910  1490 net.cpp:150] Setting up relu6
I0423 20:03:14.593932  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.593955  1490 net.cpp:165] Memory required for data: 67946040
I0423 20:03:14.593967  1490 layer_factory.hpp:77] Creating layer drop6
I0423 20:03:14.593989  1490 net.cpp:100] Creating Layer drop6
I0423 20:03:14.594005  1490 net.cpp:434] drop6 <- fc6
I0423 20:03:14.594027  1490 net.cpp:395] drop6 -> fc6 (in-place)
I0423 20:03:14.594075  1490 net.cpp:150] Setting up drop6
I0423 20:03:14.594094  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.594110  1490 net.cpp:165] Memory required for data: 68109880
I0423 20:03:14.594122  1490 layer_factory.hpp:77] Creating layer fc7
I0423 20:03:14.594146  1490 net.cpp:100] Creating Layer fc7
I0423 20:03:14.594157  1490 net.cpp:434] fc7 <- fc6
I0423 20:03:14.594182  1490 net.cpp:408] fc7 -> fc7
I0423 20:03:14.960005  1490 net.cpp:150] Setting up fc7
I0423 20:03:14.960050  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.960064  1490 net.cpp:165] Memory required for data: 68273720
I0423 20:03:14.960088  1490 layer_factory.hpp:77] Creating layer relu7
I0423 20:03:14.960108  1490 net.cpp:100] Creating Layer relu7
I0423 20:03:14.960121  1490 net.cpp:434] relu7 <- fc7
I0423 20:03:14.960168  1490 net.cpp:395] relu7 -> fc7 (in-place)
I0423 20:03:14.960573  1490 net.cpp:150] Setting up relu7
I0423 20:03:14.960595  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.960608  1490 net.cpp:165] Memory required for data: 68437560
I0423 20:03:14.960623  1490 layer_factory.hpp:77] Creating layer drop7
I0423 20:03:14.960644  1490 net.cpp:100] Creating Layer drop7
I0423 20:03:14.960657  1490 net.cpp:434] drop7 <- fc7
I0423 20:03:14.960671  1490 net.cpp:395] drop7 -> fc7 (in-place)
I0423 20:03:14.960731  1490 net.cpp:150] Setting up drop7
I0423 20:03:14.960746  1490 net.cpp:157] Top shape: 10 4096 (40960)
I0423 20:03:14.960757  1490 net.cpp:165] Memory required for data: 68601400
I0423 20:03:14.960775  1490 layer_factory.hpp:77] Creating layer fc8_fp-mini
I0423 20:03:14.960796  1490 net.cpp:100] Creating Layer fc8_fp-mini
I0423 20:03:14.960811  1490 net.cpp:434] fc8_fp-mini <- fc7
I0423 20:03:14.960832  1490 net.cpp:408] fc8_fp-mini -> fc8_fp-mini
I0423 20:03:14.961849  1490 net.cpp:150] Setting up fc8_fp-mini
I0423 20:03:14.961866  1490 net.cpp:157] Top shape: 10 10 (100)
I0423 20:03:14.961884  1490 net.cpp:165] Memory required for data: 68601800
I0423 20:03:14.961905  1490 net.cpp:228] fc8_fp-mini does not need backward computation.
I0423 20:03:14.961916  1490 net.cpp:228] drop7 does not need backward computation.
I0423 20:03:14.961930  1490 net.cpp:228] relu7 does not need backward computation.
I0423 20:03:14.961941  1490 net.cpp:228] fc7 does not need backward computation.
I0423 20:03:14.961961  1490 net.cpp:228] drop6 does not need backward computation.
I0423 20:03:14.961972  1490 net.cpp:228] relu6 does not need backward computation.
I0423 20:03:14.961984  1490 net.cpp:228] fc6 does not need backward computation.
I0423 20:03:14.962002  1490 net.cpp:228] pool5 does not need backward computation.
I0423 20:03:14.962015  1490 net.cpp:228] relu5 does not need backward computation.
I0423 20:03:14.962026  1490 net.cpp:228] conv5 does not need backward computation.
I0423 20:03:14.962038  1490 net.cpp:228] relu4 does not need backward computation.
I0423 20:03:14.962049  1490 net.cpp:228] conv4 does not need backward computation.
I0423 20:03:14.962064  1490 net.cpp:228] relu3 does not need backward computation.
I0423 20:03:14.962082  1490 net.cpp:228] conv3 does not need backward computation.
I0423 20:03:14.962095  1490 net.cpp:228] norm2 does not need backward computation.
I0423 20:03:14.962107  1490 net.cpp:228] pool2 does not need backward computation.
I0423 20:03:14.962126  1490 net.cpp:228] relu2 does not need backward computation.
I0423 20:03:14.962138  1490 net.cpp:228] conv2 does not need backward computation.
I0423 20:03:14.962152  1490 net.cpp:228] norm1 does not need backward computation.
I0423 20:03:14.962163  1490 net.cpp:228] pool1 does not need backward computation.
I0423 20:03:14.962182  1490 net.cpp:228] relu1 does not need backward computation.
I0423 20:03:14.962203  1490 net.cpp:228] conv1 does not need backward computation.
I0423 20:03:14.962215  1490 net.cpp:228] data does not need backward computation.
I0423 20:03:14.962227  1490 net.cpp:270] This network produces output fc8_fp-mini
I0423 20:03:14.962260  1490 net.cpp:283] Network initialization done.
I0423 20:03:18.347369  1490 net.cpp:761] Ignoring source layer loss
